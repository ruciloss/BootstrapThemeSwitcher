var t={d:(e,s)=>{for(var i in s)t.o(s,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:s[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{A:()=>s});
/**
 * Bootstrap Theme Toggler
 *
 * You can easily switch between light and dark modes. 
 * The theme can be set automatically based on the system's preference and will remember the user's choice. 
 * Using Bootstrap's dropdown menu, users can select their preferred theme, and Bootstrap Icons can be included for an enhanced visual experience.
 *
 * @author Jindřich Ručil
 * @version 1.0.2
 * @license MIT
 * @see {@link https://jindrichrucil.github.io}
 * 
 * @requires Bootstrap 5.2 or later
 */
class s{static t=(()=>"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname)();static i="useTheme";static h="bs-theme-toggler";static l={root:"body",prepend:!1,i18n:{default:"en",autoDetect:!1,translations:{en:{system:"System",light:"Light",dark:"Dark"}}},classes:{container:"",button:"",menu:""}};static u(t,e){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i="[Bootstrap Theme Toggler v1.0.2]";this.t&&(s?console.error(`${i} ${t}`,e||""):console.log(`${i} ${t}`,void 0!==e?e:" "))}static m(){return"_"+Math.random().toString(16).slice(2)}static p(t){const e=document.createElement(t);return"button"===t&&e.setAttribute("type","button"),e}static $(t){if(this.u("Creating element.."),this.k=this.m(),this.u(`Generated ID: ${this.k}`),t.querySelector(`#${this.h}`))return void this.u("Element already exists in the root. Skipping creation..");const e=this.p("div"),s=`dropdown ${this.l.classes.container||""}`.trim();e.className=s,e.id=this.h,e.setAttribute("data-integrity",this.k),this.l.classes.container&&this.u(`Added custom class: '${this.l.classes.container}' to the dropdown container.`);const i=this.p("button"),a=`dropdown-toggle btn border-0 ${this.l.classes.button||""}`.trim();i.className=a,i.setAttribute("data-bs-toggle","dropdown"),i.setAttribute("aria-expanded","false"),this.l.classes.button&&this.u(`Added custom class: '${this.l.classes.button}' to the button.`);const o=this.p("i");o.className="bi bi-circle-half",i.appendChild(o),i.append(" "+(this.l.i18n.system||"System"));const n=this.p("ul"),h=`dropdown-menu ${this.l.classes.menu||""}`.trim();n.className=h,this.l.classes.menu&&this.u(`Added custom class: '${this.l.classes.menu}' to the dropdown menu.`);const d=(t,e)=>{const s=this.p("li"),i=this.p("a");return i.className="dropdown-item",i.href="#!",i.setAttribute("data-value",t),i.append(e),s.appendChild(i),s};n.appendChild(d("system",this.l.i18n.system||"System")),n.appendChild(d("light",this.l.i18n.light||"Light")),n.appendChild(d("dark",this.l.i18n.dark||"Dark")),e.appendChild(i),e.appendChild(n),this.l.prepend?(t.insertAdjacentElement("afterbegin",e),this.u("Prepended element to the root.")):(t.appendChild(e),this.u("Appended element to the root."))}static async v(t){this.u(`Loading translations for language: ${t}`);const e=this.l.i18n.translations;if("string"==typeof e[t])try{const s=await fetch(e[t]);if(s.ok){const e=await s.json();return this.u(`Translations loaded successfully for language: ${t}`),e}this.u(`Failed to load translations from ${e[t]}`,null,!0)}catch(t){this.u(`Error loading translations: ${t.message}`,null,!0)}return this.u(`No external translations found for language: ${t}. Using default.`),e[this.l.i18n.default]||{}}static D(){const{autoDetect:t,default:e}=this.l.i18n;let s=e;return"browser"===t?(s=navigator.language.split("-")[0]||e,this.u(`Detected language from browser: ${s}`)):"document"===t?(s=document.documentElement.lang||e,this.u(`Detected language from document: ${s}`)):this.u(`Language auto-detection is disabled. Using default language: ${e}`),s}static L(t){this.u(`Updating theme to: ${t}`);const e=document.getElementById(this.h);if(!e)return void this.u(`Element with ID #${this.h} not found.`,null,!0);const s=e.querySelectorAll(".dropdown-menu li a");s.forEach((t=>t.classList.remove("active")));const i=(t,i,a,o)=>{document.documentElement.setAttribute("data-bs-theme",i);e.querySelector(".dropdown-toggle").innerHTML=`<i class="${a}"></i> ${o}`,localStorage.setItem(this.i,t);const n=(h=i).charAt(0).toUpperCase()+h.slice(1);var h;this.u(`${n} theme applied.`),s.forEach((t=>{const e=t.getAttribute("data-value");"system"===e?t.textContent=this.l.i18n.translations.system||"System":"light"===e?t.textContent=this.l.i18n.translations.light||"Light":"dark"===e&&(t.textContent=this.l.i18n.translations.dark||"Dark")}))},a=e.querySelector(`.dropdown-menu li a[data-value="${t}"]`);if(!a)return void this.u(`Theme option not found for: ${t}`,null,!0);a.classList.add("active");const o=this.l.i18n.translations,n={system:o.system||"System",light:o.light||"Light",dark:o.dark||"Dark"};switch(t){case"system":window.matchMedia("(prefers-color-scheme: dark)").matches?(this.u("Detected system preference: dark"),i("system","dark","bi bi-circle-half",n.system)):(this.u("Detected system preference: light"),i("system","light","bi bi-circle-half",n.system));break;case"light":i("light","light","bi bi-brightness-high-fill",n.light);break;case"dark":i("dark","dark","bi bi-moon-fill",n.dark);break;default:this.u(`Unknown theme: ${t}`,null,!0)}}static async setLanguage(t){this.u(`Setting language to: ${t}`);const e=await this.v(t);this.l.i18n.translations=e;const s=document.getElementById(this.h);if(s){s.querySelectorAll(".dropdown-menu li a").forEach((t=>{const s=t.getAttribute("data-value");"system"===s?t.textContent=e.system||"System":"light"===s?t.textContent=e.light||"Light":"dark"===s&&(t.textContent=e.dark||"Dark")}));const t=s.querySelector(".dropdown-toggle");t&&(t.innerHTML=`<i class="${t.querySelector("i").className}"></i> ${e.system||"System"}`)}this.u(`Language updated to: ${t}`)}static async run(){let t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.l={...this.l,...e},this.u("Initializing.."),t="string"==typeof this.l.root?document.querySelector(this.l.root):this.l.root instanceof HTMLElement?this.l.root:document.body,t||(this.u("Root element not found. Falling back to body.",null,!0),t=document.body),this.$(t);const s=this.D();this.u(`Detected language: ${s}`);const i=await this.v(s);this.l.i18n={...this.l.i18n,translations:i};let a=localStorage.getItem(this.i);null===a?(a="system",localStorage.setItem(this.i,"system"),this.u("No saved theme found. Defaulting to: system")):this.u(`Saved theme found: ${a}`),this.L(a),document.body.addEventListener("click",(t=>{if(t.target.matches(`#${this.h} .dropdown-menu li a`)){const e=t.target.getAttribute("data-value");this.L(e)}})),this.u("Initialized!")}}var i=e.A;export{i as default};